net {
  type = mainnet
}

storage {
  db.version = 2,
  db.engine = "LEVELDB",
  db.sync = false,
  db.directory = "database",
  index.directory = "index",
  transHistory.switch = "on",

  properties = [
  ]

  needToUpdateAsset = true

  dbSettings = {
    levelNumber = 7
    blocksize = 64  // n * KB
    maxBytesForLevelBase = 256  // n * MB
    maxBytesForLevelMultiplier = 10
    level0FileNumCompactionTrigger = 4
    targetFileSizeBase = 256  // n * MB
    targetFileSizeMultiplier = 1
  }

  backup = {
    enable = false  // indicate whether enable the backup plugin
    propPath = "prop.properties" // record which bak directory is valid
    bak1path = "bak1/database" // you must set two backup directories to prevent application halt unexpected(e.g. kill -9).
    bak2path = "bak2/database"
    frequency = 10000   // indicate backup db once every 10000 blocks processed.
  }
}

node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = "x.x.x.210"
  # external.ip = null
}

node.backup {
  port = 10001
  priority = 8
  members = [
  ]
}

node {
  # trust node for solidity node
  trustNode = "127.0.0.1:50051"
  # expose extension api to public or not
  walletExtensionApi = true
  listen.port = 18888
  connection.timeout = 2
  tcpNettyWorkThreadNum = 0
  udpNettyWorkThreadNum = 1
  connectFactor = 0.3
  activeConnectFactor = 0.1
  maxActiveNodes = 30
  maxActiveNodesWithSameIp = 2
  maxHttpConnectNumber = 50
  minParticipationRate = 15
  zenTokenId = 1000016
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  p2p {
    version = 201910292
  }

  metrics {
    prometheus {
      enable=true
      port="9527"
    }
  }

  active = [
    "47.90.214.183:18888"
  ]

  passive = [
  ]

  fastForward = [
  ]

  http {
    fullNodePort = 8090
    solidityPort = 8091
  }

  rpc {
    port = 50051
    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000
    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 1
  }
}

## rate limiter config
rate.limiter = {
  http = [
  ],

  rpc = [
  ]

}


seed.node = {
  ip.list = [
    "47.90.214.183:18888",
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Zion"
      accountType = "AssetIssue"
      address = "TMWXhuxiT1KczhBxCseCDDsrhmpYGUcoA9"
      balance = "99000000000000000"
    },
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      address = "TN21Wx2yoNYiZ7znuQonmZMJnH5Vdfxu78"
      balance = "99000000000000000"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "TDPJULRzVtzVjnBmZvfaTcTNQ2tsVi6XxQ"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: TD23EqH3ixYMYh8CMXKdHyQWjePi3KQvxV,
      url = "http://GR1.com",
      voteCount = 100000026
    },
    {
      address: TCm4Lz1uP3tQm3jzpwFTG6o5UvSTA2XEHc,
      url = "http://GR2.com",
      voteCount = 100000025
    },
    {
      address: TTgDUgREiPBeY3iudD5e2eEibE4v4CE8C9,
      url = "http://GR3.com",
      voteCount = 100000024
    },
    {
      address: TFVDe7kMEmb8EuUxxp42kocQY1fFY727WS,
      url = "http://GR4.com",
      voteCount = 100000023
    },
    {
      address: TY4NSjctzTchHkhaCskVc5zQtnX9s1uxAX,
      url = "http://GR5.com",
      voteCount = 100000022
    },
    {
      address: TWSMPrm6aizvsJmPnjMB7x3UExJfRhyQhd,
      url = "http://GR6.com",
      voteCount = 100000021
    },
    {
      address: TKwLkSaCvqqpAB44qaHGTohCTCFoYw7ecy,
      url = "http://GR7.com",
      voteCount = 100000020
    },
    {
      address: TDsYmm1St9r4UZebDGWBcTMtfYTw9YX5h4,
      url = "http://GR8.com",
      voteCount = 100000019
    },
    {
      address: TFEQbWAPxhbUr1P14y9UJBUZo3LgtdqTS7,
      url = "http://GR9.com",
      voteCount = 100000018
    },
    {
      address: TCynAi8tb7UWP7uhLv6fe971KLm2KT8tcs,
      url = "http://GR10.com",
      voteCount = 100000017
    },
    {
      address: TC2YsLp4rzrt3AbeN3EryoSywrBjEUVCq3,
      url = "http://GR11.com",
      voteCount = 100000016
    },
    {
      address: THxMKH1uaL5FpURujkQR7u2sNZ2n5PSsiH,
      url = "http://GR12.com",
      voteCount = 100000015
    },
    {
      address: TWbzgoHimDcXWy19ts1An8bxA4JKjcYHeG,
      url = "http://GR13.com",
      voteCount = 100000014
    },
    {
      address: TW2LmXnVCEaxuVtQN8gZR1ixT5PNm4QLft,
      url = "http://GR14.com",
      voteCount = 100000013
    },
    {
      address: TVuqk4rYYVHVA6j6sSEnaLexhhoQhN8nyZ,
      url = "http://GR15.com",
      voteCount = 100000012
    },
    {
      address: TVMZu5ptZPhhkZ3Kaagkq35FmyuKNvUKJV,
      url = "http://GR16.com",
      voteCount = 100000011
    },
    {
      address: TFDHT8PqUrL2Bd8DeysSiHHBAEMidZgkhx,
      url = "http://GR17.com",
      voteCount = 100000010
    },
    {
      address: TVqz5Bj3M1uEenaSsw2NnXvTWChPj6K3hb,
      url = "http://GR18.com",
      voteCount = 100000009
    },
    {
      address: TSt8YNpARJkhdMdEV4C7ajH1tFHpZWzF1T,
      url = "http://GR19.com",
      voteCount = 100000008
    },
    {
      address: TTxWDjEb3Be1Ax8BCvK48cnaorZofLq2C9,
      url = "http://GR20.com",
      voteCount = 100000007
    },
    {
      address: TU5T838YtyZtEQKpnXEdRz3d8hJn6WHhjw,
      url = "http://GR21.com",
      voteCount = 100000006
    },
    {
      address: TRuSs1MpL3o2hzhU8r6HLC7WtDyVE9hsF6,
      url = "http://GR22.com",
      voteCount = 100000005
    },
    {
      address: TYMCoCZyAjWkWdUfEHg1oZQYbLKev282ou,
      url = "http://GR23.com",
      voteCount = 100000004
    },
    {
      address: TQvAyGATpLZymHbpeaRozJCKqSeRWVNhCJ,
      url = "http://GR24.com",
      voteCount = 100000003
    },
    {
      address: TYDd9nskbhJmLLNoe4yV2Z1SYtGjNa8wyg,
      url = "http://GR25.com",
      voteCount = 100000002
    },
    {
      address: TS5991Geh2qeHtw46rskpJyn6hFNbuZGGc,
      url = "http://GR26.com",
      voteCount = 100000001
    },
    {
      address: TKnn5MBnmXXeKdu9dxKVfKk4n1YdCeSRGr,
      url = "http://GR27.com",
      voteCount = 100000000
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0xe58f33f9baf9305dc6f82b9f1934ea8f0ade2defb951258d50167028c780351f"
}


block = {
  needSyncCheck = false
  maintenanceTimeInterval = 600000
  proposalExpireTime = 600000 //
}

vm = {
  supportConstant =true
  minTimeRatio = 0.0
  maxTimeRatio = 5.0
  saveInternalTx = true

}

committee = {
  allowCreationOfContracts = 0  //mainnet:0 (reset by committee),test:1
  allowAdaptiveEnergy = 0  //mainnet:0 (reset by committee),test:1
}

event.subscribe = {
  native = {
    useNativeQueue = true // if true, use native message queue, else use event plugin.
    bindport = 5555 // bind port
    sendqueuelength = 1000 //max length of send queue
  }

  path = "" // absolute path of plugin
  server = "" // target server address to receive event triggers
  dbconfig = "" // dbname|username|password
  contractParse = true,
  topics = [
    {
      triggerName = "block" // block trigger, the value can't be modified
      enable = true
      topic = "block" // plugin topic, the value could be modified
    },
    {
      triggerName = "transaction"
      enable = true
      topic = "transaction"
    },
    {
      triggerName = "contractevent"
      enable = true
      topic = "contractevent"
    },
    {
      triggerName = "contractlog"
      enable = false
      topic = "contractlog"
    }
  ]

  filter = {
    fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
    toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
    contractAddress = [
      "" // contract address you want to subscribe, if it's set to "", you will receive contract logs/events with any contract address.
    ]

    contractTopic = [
      "" // contract topic you want to subscribe, if it's set to "", you will receive contract logs/events with any contract topic.
    ]
  }
}
